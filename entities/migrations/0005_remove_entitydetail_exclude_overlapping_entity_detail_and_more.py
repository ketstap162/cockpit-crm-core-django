# Generated by Django 5.2.6 on 2025-09-27 15:21

import django.contrib.postgres.constraints
import django.contrib.postgres.indexes
import django.contrib.postgres.search
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('entities', '0004_entitydetail_exclude_overlapping_entity_detail'),
    ]

    operations = [
        migrations.RemoveConstraint(
            model_name='entitydetail',
            name='exclude_overlapping_entity_detail',
        ),
        migrations.RemoveIndex(
            model_name='entity',
            name='entities_en_display_c82a12_idx',
        ),
        migrations.AddField(
            model_name='entity',
            name='search_vector',
            field=django.contrib.postgres.search.SearchVectorField(null=True),
        ),
        migrations.AlterField(
            model_name='entity',
            name='entity_type',
            field=models.ForeignKey(db_column='entity_type_id', on_delete=django.db.models.deletion.PROTECT, related_name='entities', to='entities.entitytype'),
        ),
        migrations.AddIndex(
            model_name='entity',
            index=django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='entity_search_gin'),
        ),
        migrations.AddConstraint(
            model_name='entity',
            constraint=models.UniqueConstraint(condition=models.Q(('is_current', True)), fields=('uuid',), name='uniq_current_entity_per_uuid'),
        ),
        migrations.AddConstraint(
            model_name='entity',
            constraint=django.contrib.postgres.constraints.ExclusionConstraint(expressions=[(models.F('uuid'), '='), (models.Func(models.F('valid_from'), models.Func(models.F('valid_to'), function='COALESCE', template="COALESCE(%(expressions)s, 'infinity')"), function='TSTZRANGE'), '&&')], name='exclude_overlapping_entity_versions'),
        ),
        migrations.AddConstraint(
            model_name='entitydetail',
            constraint=django.contrib.postgres.constraints.ExclusionConstraint(expressions=[(models.F('entity_uuid'), '='), (models.F('detail_code'), '='), (models.Func(models.F('valid_from'), models.Func(models.F('valid_to'), function='COALESCE', template="COALESCE(%(expressions)s, 'infinity')"), function='TSTZRANGE'), '&&')], name='exclude_overlapping_entity_detail'),
        ),
    ]

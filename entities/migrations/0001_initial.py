# Generated by Django 5.2.6 on 2025-09-27 15:44

import django.contrib.postgres.constraints
import django.contrib.postgres.indexes
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EntityDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('valid_from', models.DateTimeField(default=django.utils.timezone.now)),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('is_current', models.BooleanField(default=True)),
                ('hash_diff', models.CharField(blank=True, editable=False, max_length=64)),
                ('detail_code', models.CharField(max_length=100)),
                ('value', models.TextField()),
                ('entity_uuid', models.UUIDField()),
            ],
            options={
                'verbose_name': 'Entity Detail',
                'verbose_name_plural': 'Entity Details',
                'indexes': [django.contrib.postgres.indexes.GistIndex(fields=['uuid'], name='idx_uuid_gist_entity_detail'), django.contrib.postgres.indexes.GistIndex(fields=['hash_diff'], name='idx_hd_gist_entity_detail'), models.Index(fields=['detail_code'], name='entities_en_detail__134c0b_idx')],
                'constraints': [models.UniqueConstraint(condition=models.Q(('is_current', True)), fields=('entity_uuid', 'detail_code'), name='unique_current_entity_detail'), models.UniqueConstraint(condition=models.Q(('is_current', True)), fields=('entity_uuid',), name='unique_current_per_entity_uuid'), django.contrib.postgres.constraints.ExclusionConstraint(expressions=[(models.F('entity_uuid'), '='), (models.F('detail_code'), '='), (models.Func(models.F('valid_from'), models.Func(models.F('valid_to'), function='COALESCE', template="COALESCE(%(expressions)s, 'infinity')"), function='TSTZRANGE'), '&&')], name='exclude_overlapping_entity_detail'), django.contrib.postgres.constraints.ExclusionConstraint(expressions=[(models.F('uuid'), '='), (models.Func(models.F('valid_from'), models.F('valid_to'), function='tstzrange'), '&&')], name='no_overlap_versions_entity_detail'), models.UniqueConstraint(condition=models.Q(('is_current', True)), fields=('uuid',), name='unique_current_uuid_entity_detail')],
            },
        ),
        migrations.CreateModel(
            name='EntityType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Entity Type',
                'verbose_name_plural': 'Entity Types',
                'indexes': [django.contrib.postgres.indexes.GistIndex(fields=['uuid'], name='idx_uuid_gist_entity_type')],
            },
        ),
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('valid_from', models.DateTimeField(default=django.utils.timezone.now)),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('is_current', models.BooleanField(default=True)),
                ('hash_diff', models.CharField(blank=True, editable=False, max_length=64)),
                ('display_name', models.CharField(max_length=255)),
                ('entity_type', models.ForeignKey(db_column='entity_type_id', on_delete=django.db.models.deletion.PROTECT, related_name='entities', to='entities.entitytype')),
            ],
            options={
                'verbose_name': 'Entity',
                'verbose_name_plural': 'Entities',
                'indexes': [django.contrib.postgres.indexes.GistIndex(fields=['uuid'], name='idx_uuid_gist_entity'), django.contrib.postgres.indexes.GistIndex(fields=['hash_diff'], name='idx_hd_gist_entity'), django.contrib.postgres.indexes.GinIndex(fields=['display_name'], name='entity_display_name_gin', opclasses=['gin_trgm_ops'])],
                'constraints': [models.UniqueConstraint(condition=models.Q(('is_current', True)), fields=('uuid',), name='uniq_current_entity_per_uuid'), django.contrib.postgres.constraints.ExclusionConstraint(expressions=[(models.F('uuid'), '='), (models.Func(models.F('valid_from'), models.Func(models.F('valid_to'), function='COALESCE', template="COALESCE(%(expressions)s, 'infinity')"), function='TSTZRANGE'), '&&')], name='exclude_overlapping_entity_versions'), django.contrib.postgres.constraints.ExclusionConstraint(expressions=[(models.F('uuid'), '='), (models.Func(models.F('valid_from'), models.F('valid_to'), function='tstzrange'), '&&')], name='no_overlap_versions_entity'), models.UniqueConstraint(condition=models.Q(('is_current', True)), fields=('uuid',), name='unique_current_uuid_entity')],
            },
        ),
    ]
